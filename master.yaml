Description: >

  This template deploys a VPC, with a pair of public and private subnets spread 
  across two Availabilty Zones. It deploys an Internet Gateway, with a default 
  route on the public subnets. It deploys a pair of NAT Gateways (one in each AZ), 
  and default routes for them in the private subnets.

  It then deploys a highly available ECS cluster using an AutoScaling Group, with 
  ECS hosts distributed across multiple Availability Zones. 

  Finally, it deploys a pair of example ECS services from containers published in 
  Amazon EC2 Container Registry (Amazon ECR).

  Last Modified: 10th January 2019
  Author: Seralahthan <seralahthan@wso2.com>

Resources:
  VPC:
    Type: AWS::CloudFormation::Stack
    Properties:
      TemplateURL: https://s3-us-west-2.amazonaws.com/seran.cloudformation-templates/vpc.yaml
      Parameters:
        EnvironmentName: !Ref AWS::StackName
        VpcCIDR: 10.180.0.0/16
        PublicSubnet1CIDR: 10.180.8.0/21
        PublicSubnet2CIDR: 10.180.16.0/21
        PrivateSubnet1CIDR: 10.180.24.0/21
        PrivateSubnet2CIDR: 10.180.32.0/21

  SecurityGroups:
    Type: AWS::CloudFormation::Stack
    Properties:
      TemplateURL: https://s3-us-west-2.amazonaws.com/seran.cloudformation-templates/security-groups.yaml
      Parameters:
        EnvironmentName: !Ref AWS::StackName
        VPC: !GetAtt VPC.Outputs.VPC

  ALB:
    Type: AWS::CloudFormation::Stack
    Properties:
      TemplateURL: https://s3-us-west-2.amazonaws.com/seran.cloudformation-templates/load-balancers.yaml
      Parameters:
        EnvironmentName: !Ref AWS::StackName
        VPC: !GetAtt VPC.Outputs.VPC
        Subnets: !GetAtt VPC.Outputs.PublicSubnets
        SecurityGroup: !GetAtt SecurityGroups.Outputs.LoadBalancerSecurityGroup

  MySQLDB:
    Type: AWS::CloudFormation::Stack
    Properties:
      TemplateURL: https://s3-us-west-2.amazonaws.com/seran.cloudformation-templates/mysqldb.yaml
      Parameters:
        SecurityGroup: !GetAtt SecurityGroups.Outputs.RDSSecurityGroup
        PublicSubnet1Id: !GetAtt VPC.Outputs.PublicSubnet1
        PublicSubnet2Id: !GetAtt VPC.Outputs.PublicSubnet2

  ECS:
    Type: AWS::CloudFormation::Stack
    Properties:
      TemplateURL: https://s3-us-west-2.amazonaws.com/seran.cloudformation-templates/ecs-cluster.yaml
      Parameters:
        EnvironmentName: !Ref AWS::StackName
        InstanceType: t2.medium
        ClusterSize: 4
        VPC: !GetAtt VPC.Outputs.VPC
        SecurityGroup: !GetAtt SecurityGroups.Outputs.ECSHostSecurityGroup
        Subnets: !GetAtt VPC.Outputs.PrivateSubnets

  ballerinaService:
    Type: AWS::CloudFormation::Stack
    DependsOn: 
      - MySQLDB
      - ECS
    Properties:
      TemplateURL: https://s3-us-west-2.amazonaws.com/seran.cloudformation-templates/service.yaml
      Parameters:
        VPC: !GetAtt VPC.Outputs.VPC
        Cluster: !GetAtt ECS.Outputs.Cluster
        DesiredCount: 4
        Listener: !GetAtt ALB.Outputs.Listener
        Path: /utility/*
        ECSServiceAutoScalingRoleARN: !GetAtt ECS.Outputs.ECSServiceAutoScalingRole
        ECSAutoScalingGroupName: !GetAtt ECS.Outputs.ECSAutoScalingGroupName
        DBEndpointURL:  !GetAtt MySQLDB.Outputs.DBUrl

  LifecycleHook:
    Type: AWS::CloudFormation::Stack
    Properties:
      TemplateURL: https://s3-us-west-2.amazonaws.com/seran.cloudformation-templates/lifecyclehook.yaml
      Parameters:
        Cluster: !GetAtt ECS.Outputs.Cluster
        ECSAutoScalingGroupName: !GetAtt ECS.Outputs.ECSAutoScalingGroupName

Outputs:
  utilityServiceUrl:
    Description: The URL endpoint for the ballerina service
    Value: !Join ["", [!GetAtt ALB.Outputs.LoadBalancerUrl, "/utility"]]
